{
  "plugins": [
    "eslint-comments",
    "import",
    "functions",
    "@typescript-eslint",
    "react-hooks"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:react/jsx-runtime",
    "plugin:react-hooks/recommended",
    "plugin:@typescript-eslint/strict-type-checked"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "rules": {
    "eslint-comments/no-unused-disable": "warn",
    "spaced-comment": ["warn", "always"],
    "import/no-useless-path-segments": [
      "warn",
      {
        "noUselessIndex": true
      }
    ],
    "no-restricted-syntax": [
      "error",
      {
        "selector": "ForInStatement",
        "message": "Don't use for..in; consider for..of with Object.keys() or Object.entries()."
      }
    ],
    "no-undef": "off",
    "@typescript-eslint/array-type": [
      "warn",
      {
        "default": "generic"
      }
    ],
    "@typescript-eslint/consistent-type-definitions": ["warn", "type"],
    "@typescript-eslint/consistent-type-exports": "warn",
    "@typescript-eslint/consistent-type-imports": "warn",
    "@typescript-eslint/no-empty-interface": "warn",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/explicit-member-accessibility": "off",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "ignoreRestSiblings": true,
        "varsIgnorePattern": "^_",
        "argsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/prefer-interface": "off",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/ban-types": [
      "error",
      {
        "extendDefaults": true,
        "types": {
          "object": false
        }
      }
    ],
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/consistent-type-assertions": [
      "warn",
      { "assertionStyle": "never" }
    ],
    // Override the following to be less strict
    "@typescript-eslint/no-misused-promises": [
      "error",
      {
        "checksVoidReturn": false
      }
    ],
    "@typescript-eslint/restrict-template-expressions": [
      "warn",
      {
        "allowBoolean": true,
        "allowNumber": true
      }
    ],
    "@typescript-eslint/no-confusing-void-expression": [
      "warn",
      {
        "ignoreVoidOperator": true,
        "ignoreArrowShorthand": true
      }
    ],
    "react/display-name": "off",
    "react/jsx-curly-brace-presence": [
      "warn",
      {
        "props": "never",
        "children": "never"
      }
    ],
    "react/jsx-no-target-blank": "off",
    "curly": "warn",
    "dot-notation": "warn",
    "eol-last": "warn",
    "eqeqeq": [
      "warn",
      "always",
      {
        "null": "ignore"
      }
    ],
    "no-console": "warn",
    "no-debugger": "warn",
    "one-var": ["warn", "never"],
    "prefer-arrow-callback": "warn",
    "prefer-const": "warn",
    "radix": "warn",
    "functions/top-level-fn-decl": "warn"
  }
}
